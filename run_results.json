{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.7", "generated_at": "2024-02-21T22:07:29.103447Z", "invocation_id": "dcd1ecee-97cb-4f7f-bb26-d8ec04ae1333", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.749899Z", "completed_at": "2024-02-21T22:07:27.832053Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.847317Z", "completed_at": "2024-02-21T22:07:27.847317Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12923598289489746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_business_units", "compiled": true, "compiled_code": "\n\nwith rawbusinessunits as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblbill\n    where coalesce(trim(businessunit), '') != ''\n),\n\nfinal as (\n    select\n        abs(hash(upper(trim(businessunit))))::number as business_unit_key,\n        upper(trim(businessunit))::varchar(250) as business_unit,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawbusinessunits\n    union\n    select\n        -1::number as business_unit_key,\n        'UNKNOWN' as business_unit,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n\n)\n\nselect * from final\n\n\n    where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_business_units where HARMONIZED_DEV.RECORDTRAK.dim_business_units.business_unit = final.business_unit)\n", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_business_units"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.767912Z", "completed_at": "2024-02-21T22:07:27.836010Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.854456Z", "completed_at": "2024-02-21T22:07:27.854456Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13164186477661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_clients", "compiled": true, "compiled_code": "\n\nwith rawclients as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblclient\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_clients)\n    \n\n),\n\nfinal as (\n    select\n        abs(hash(id_tblclient))::number as client_key,\n        trim(id_tblclient)::varchar(256) as id_tblclient,\n        trim(newfirst)::varchar(50) as client_first_name,\n        trim(title)::varchar(6) as client_title,\n        trim(barnumber)::varchar(15) as bar_number,\n        trim(salespers)::varchar(25) as sales_person,\n        active::boolean as is_active,\n        trim(newlast)::varchar(50) as client_last_name,\n        trim(type)::varchar(1) as client_type,\n        trim(acctstatus)::varchar(10) as account_status,\n        trim(newinit)::varchar(1) as client_middle_initial,\n        trim(source)::varchar(2) as source_code,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawclients\n    union\n    select\n        -1 as client_key,\n        'UNKNOWN' as id_tblclient,\n        'UNKNOWN' as client_first_name,\n        'UNKNOWN' as client_title,\n        'UNKNOWN' as bar_number,\n        'UNKNOWN' as sales_person,\n        1 as is_active,\n        'UNKNOWN' as client_last_name,\n        '' as client_type,\n        'UNKNOWN' as account_status,\n        '' as client_middle_initial,\n        '' as source_code,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_clients where client_key = -1)\n    \n\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_clients"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.799347Z", "completed_at": "2024-02-21T22:07:27.839009Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.860492Z", "completed_at": "2024-02-21T22:07:27.860492Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.12708425521850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_hold_requests", "compiled": true, "compiled_code": "\n\nwith rawholdrequests as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblholdreq\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_hold_requests)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as hold_request_key,\n        trim(id_tblholdreq)::varchar(256) as id_tblholdreq,\n        trim(cl_code)::varchar(10) as client_code,\n        tag::number as tag_number,\n        objct_date::timestamp_ntz(9) as objection_date,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawholdrequests\n    union\n    select\n        -1 as hold_request_key,\n        'UNKNOWN' as id_tblholdreq,\n        'UNKNOWN' as client_code,\n        -1 as tag_number,\n        '1900-01-01' as objection_date,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_hold_requests where hold_request_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_hold_requests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.788992Z", "completed_at": "2024-02-21T22:07:27.840010Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.860980Z", "completed_at": "2024-02-21T22:07:27.860980Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.13008403778076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_firms", "compiled": true, "compiled_code": "\n\nwith rawfirms as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblfirm\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_firms)\n    \n\n),\n\nfinal as (\n    select\n        abs(hash(id_tblfirm))::number as firm_key,\n        trim(id_tblfirm)::varchar(256) as id_tblfirm,\n        firm_ident::number as firm_identity,\n        trim(firm_name)::varchar(256) as firm_name,\n        trim(fullname)::varchar(256) as firm_full_name,\n        trim(firm_code)::varchar(10) as firm_code,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawfirms\n    union\n    select\n        -1 as firm_key,\n        'UNKNOWN' as id_tblfirm,\n        -1 as firm_identity,\n        'UNKNOWN' as firm_name,\n        'UNKNOWN' as firm_full_name,\n        'UNKNOWN' as firm_code,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_firms where firm_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_firms"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.776108Z", "completed_at": "2024-02-21T22:07:27.842011Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.862461Z", "completed_at": "2024-02-21T22:07:27.862461Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.13507986068725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_dates", "compiled": true, "compiled_code": "\n\n\nwith recursive calendar_dates as (\n    select DATEFROMPARTS(1970, 1, 1) as full_date\n    union all\n    select DATEADD(day, 1, full_date)\n    from calendar_dates\n    where full_date < DATEADD(year, 5, DATEFROMPARTS(YEAR(CURRENT_DATE), 1, 1)) - 1\n),\n\ncalendar_dates_with_unknown as (\n    select * from calendar_dates\n    union\n    select DATEFROMPARTS(1900, 1, 1) as full_date\n),\n\nholiday_dates as (\n    select\n        case MONTH(full_date)\n            when 1\n                then                 --New Year's Day\n                    case DAYOFWEEKISO(full_date)\n                        when 6 then DATEADD(day, -1, full_date)\n                        when 7 then DATEADD(day, 1, full_date)\n                        else full_date\n                    end\n            when 5\n                then                 -- Memorial Day\n                    IFF(DAYOFWEEKISO(LAST_DAY(full_date, month)) = 1, LAST_DAY(full_date, month), PREVIOUS_DAY(LAST_DAY(full_date, month), 'mo'))\n            when 7\n                then                 -- Independence Day\n                    case DAYOFWEEKISO(DATEADD(day, 3, full_date))\n                        when 6 then DATEADD(day, 2, full_date)\n                        when 7 then DATEADD(day, 4, full_date)\n                        else DATEADD(day, 3, full_date)\n                    end\n            when 9\n                then                 -- Labor Day\n                    IFF(DAYOFWEEKISO(full_date) = 1, full_date, NEXT_DAY(full_date, 'mo'))\n            when 11\n                then                -- Thanksgiving Day\n                    IFF(DAYOFWEEKISO(full_date) = 4, NEXT_DAY(full_date, 'th') + interval '2 weeks', NEXT_DAY(full_date, 'th') + interval '3 weeks')\n            when 12 then                -- Christmas Day\n                case DAYOFWEEKISO(DATEADD(day, 24, full_date))\n                    when 6 then DATEADD(day, 23, full_date)\n                    when 7 then DATEADD(day, 25, full_date)\n                    else DATEADD(day, 24, full_date)\n                end\n        end as holiday_date,\n\n        case MONTH(holiday_date)\n            when 1 then 'New Year''s Day'\n            when 5 then 'Memorial Day'\n            when 7 then 'Independence Day'\n            when 9 then 'Labor Day'\n            when 11 then 'Thanksgiving Day'\n            when 12 then IFF(DAY(holiday_date) = 31, 'New Year''s Day', 'Christmas Day')\n        end as holiday_description,\n\n        true as is_holiday\n    from calendar_dates\n    where DAY(full_date) = 1 and MONTH(full_date) in (1, 5, 7, 9, 11, 12)\n    union\n    select\n        IFF(DAYOFWEEKISO(full_date) = 4, NEXT_DAY(full_date, 'th') + interval '2 weeks, 1 days', NEXT_DAY(full_date, 'th') + interval '3 weeks, 1 days')\n            as holiday_date,\n        'Day After Thanksgiving' as holiday_description,\n        true as is_holiday\n    from calendar_dates\n    where DAY(full_date) = 1 and MONTH(full_date) = 11\n),\n\nfinal as (\n    select\n        TO_VARCHAR(cdu.full_date, 'YYYYMMDD')::INTEGER as date_key,\n        cdu.full_date as full_date,\n        YEAR(full_date) as year,\n        DAYOFYEAR(full_date) as day_of_year,\n        case when QUARTER(full_date) < 3 then 1 else 2 end as half,\n        (TO_VARCHAR(full_date, 'YYYY-H') || case when QUARTER(full_date) < 3 then 1 else 2 end::VARCHAR)::VARCHAR(7) as year_half,\n        case\n            when half = 1 then DATEDIFF(day, DATE_TRUNC(year, full_date), full_date) + 1\n            else DATEDIFF(day, DATEADD(month, 6, DATE_TRUNC(year, full_date)), full_date) + 1\n        end as day_of_half,\n        QUARTER(full_date) as quarter,\n        (TO_VARCHAR(full_date, 'YYYY-Q') || QUARTER(full_date)::VARCHAR)::VARCHAR(7) as year_quarter,\n        DATEDIFF(day, DATE_TRUNC('QUARTER', full_date), full_date) + 1 as day_of_quarter,\n        MONTH(full_date) as month,\n        TO_VARCHAR(full_date, 'MMMM')::VARCHAR(10) as month_name,\n        MONTHNAME(full_date) as month_name_abbrev,\n        TO_VARCHAR(full_date, 'YYYY-Mon')::VARCHAR(8) as year_month,\n        DAY(full_date) as day_of_month,\n        DECODE(DAYOFWEEKISO(full_date), 1, 'Monday', 2, 'Tuesday', 3, 'Wednesday', 4, 'Thursday', 5, 'Friday', 6, 'Saturday', 7, 'Sunday', '')::VARCHAR(10) as day_name,\n        DAYNAME(full_date) as day_name_abbrev,\n        DAYOFWEEKISO(full_date) in (6, 7) as is_weekend, -- 6: Saturday, 7: Sunday\n        is_weekend or COALESCE(hd.is_holiday, false) as is_holiday,\n        hd.holiday_description::VARCHAR(50) as holiday_description,\n        CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) as created_ts,\n        CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) as updated_ts\n    from calendar_dates_with_unknown as cdu\n    left join holiday_dates as hd\n        on cdu.full_date = hd.holiday_date\n)\n\nselect * from final\n\n    where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_dates where HARMONIZED_DEV.RECORDTRAK.dim_dates.date_key = final.date_key)\n\n\norder by 1", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_dates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.782992Z", "completed_at": "2024-02-21T22:07:27.843010Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.862978Z", "completed_at": "2024-02-21T22:07:27.862978Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1370532512664795, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_defendants", "compiled": true, "compiled_code": "\n\nwith rawdefendants as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbldefendant\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_defendants)\n    \n\n),\n\nfinal as (\n    select\n        abs(hash(id_tbldefendant))::number as defendant_key,\n        trim(id_tbldefendant)::varchar(256) as id_tbldefendant,\n        trim(bbfirmcode)::varchar(4) as bb_firm_code,\n        active::boolean as is_active,\n        trim(courier)::varchar(4) as courier_code,\n        trim(bb_combo)::varchar(9) as bb_combo,\n        trim(name_inv)::varchar(256) as invoiced_name,\n        trim(source)::varchar(2) as source_code,\n        trim(billstatus)::varchar(1) as bill_status,\n        trim(magnaatcode)::number as magna_attorney_code,\n        trim(defcode)::varchar(6) as defendant_code,\n        trim(printable_firm)::varchar(50) as printable_firm,\n        trim(defname)::varchar(50) as defendant_name,\n        trim(at_code)::varchar(8) as attorney_code,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawdefendants\n    union\n    select\n        -1 as defendant_key,\n        'UNKNOWN' as id_tbldefendant,\n        'UNK' as bb_firm_code,\n        1::boolean as is_active,\n        'UNK' as courier_code,\n        'UNKNOWN' as bb_combo,\n        'UNKNOWN' as invoiced_name,\n        '' as source_code,\n        '' as bill_status,\n        null::number as magna_attorney_code,\n        'UNKNOWN' as defendant_code,\n        'UNKNOWN' as printable_firm,\n        'UNKNOWN' as defendant_name,\n        'UNKNOWN' as attorney_code,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_defendants where defendant_key = -1)\n    \n\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_defendants"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.816200Z", "completed_at": "2024-02-21T22:07:27.845009Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.864978Z", "completed_at": "2024-02-21T22:07:27.864978Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.13408803939819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_litigation_cases", "compiled": true, "compiled_code": "\n\nwith rawlitigationcases as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbllitcase\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as litigation_case_key,\n        trim(id_tbllitcase)::varchar(256) as id_tbllitcase,\n        trim(litigation)::varchar(3) as litigation_code,\n        trim(area)::varchar(30) as area,\n        trim(office)::varchar(1) as office_code,\n        active::boolean as is_active,\n        priorityaccount::boolean as is_priority_account,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawlitigationcases\n    union\n    select\n        -1 as litigation_case_key,\n        'UNKNOWN' as id_tbllitcase,\n        'UNK' as litigation_code,\n        'UNKNOWN' as area,\n        '' as office_code,\n        1 as is_active,\n        0 as is_priority_account,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases where litigation_case_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.805922Z", "completed_at": "2024-02-21T22:07:27.846009Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.866670Z", "completed_at": "2024-02-21T22:07:27.866670Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.1372358798980713, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_invoices", "compiled": true, "compiled_code": "\n\nwith rawinvoices as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_accounting_tblinvoices\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_invoices)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as invoice_key,\n        fldinvoicenumber::number(19, 0) as invoice_number,\n        trim(fldsalespers)::varchar(50) as sales_person,\n        trim(fldplcap)::varchar(200) as plaintiff_caption,\n        trim(fldatcode)::varchar(16) as attorney_code,\n        trim(fldclaimnum)::varchar(120) as claim_number,\n        trim(fldplan)::varchar(4) as plan,\n        trim(fldplantype)::varchar(2) as plan_type,\n        trim(flddefcap)::varchar(200) as defendant_caption,\n        active::boolean as is_active,\n        trim(fldlitigation)::varchar(10) as litigation,\n        trim(fldacctmgr)::varchar(50) as account_manager,\n        trim(fldcourt)::varchar(28) as court,\n        trim(fldfilenum)::varchar(32) as file_number,\n        trim(fldadjustername)::varchar(30) as adjuster_name,\n        trim(fldarea)::varchar(30) as area,\n        trim(fldinsured)::varchar(40) as insured_name,\n        trim(flddocket)::varchar(75) as docket,\n        trim(fldinvoicetype)::varchar(2) as invoice_type,\n        metadata_created_at as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n    from rawinvoices\n    union\n    select\n        -1 as invoice_key,\n        -1 as invoice_number,\n        'UNKNOWN' as sales_person,\n        'UNKNOWN' as plaintiff_caption,\n        'UNKNOWN' as attorney_code,\n        'UNKNOWN' as claim_number,\n        'UNKN' as plan,\n        '' as plan_type,\n        'UNKNOWN' as defendant_caption,\n        1::boolean as is_active,\n        'UNKNOWN' as litigation,\n        'UNKNOWN' as account_manager,\n        'UNKNOWN' as court,\n        'UNKNOWN' as file_number,\n        'UNKNOWN' as adjuster_name,\n        'UNKNOWN' as area,\n        'UNKNOWN' as insured_name,\n        'UNKNOWN' as docket,\n        '' as invoice_type,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_invoices where invoice_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_invoices"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.902623Z", "completed_at": "2024-02-21T22:07:27.942929Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.987279Z", "completed_at": "2024-02-21T22:07:27.987279Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11590790748596191, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_masters", "compiled": true, "compiled_code": "\n\nwith rawmasters as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblmaster\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_masters)\n    \n\n),\n\nfinal as (\n    select\n        master_ident::number as master_key,\n        trim(id_tblmaster)::varchar(256) as id_tblmaster,\n        trim(division)::varchar(15) as division,\n        trim(plcap)::varchar(200) as plaintiff_caption,\n        trim(bb_no)::varchar(4) as bb_no,\n        trim(asb_case)::varchar(5) as asb_case_no,\n        trim(cl_code)::varchar(10) as client_code,\n        trim(category)::varchar(21) as category,\n        trim(rt_rep)::varchar(25) as rt_rep,\n        trim(claim_no)::varchar(60) as claim_no,\n        trim(pl_at_code)::varchar(8) as plaintiff_attorney_code,\n        trim(name_init)::varchar(1) as middle_name_initial,\n        trim(comment)::varchar(200) as comment,\n        trim(maiden_na2)::varchar(30) as maiden_name2,\n        trim(defcap)::varchar(200) as defendant_caption,\n        lrs_no::number as lrs_no,\n        trim(lrs_nocode)::varchar(1) as lrs_no_code,\n        trim(bill_code)::varchar(10) as bill_code,\n        trim(name_last)::varchar(15) as last_name,\n        wf_amount::number(19, 4) as witness_fee_amount,\n        trim(docket)::varchar(75) as docket_number,\n        active::boolean as is_active,\n        trim(businessunit)::varchar(5) as business_unit_code,\n        trim(defendantname)::varchar(250) as defendant_name,\n        magnacaseno::number as magna_case_no,\n        trim(area)::varchar(30) as area,\n        trim(litigation)::varchar(3) as litigation_code,\n        trim(rq_at_code)::varchar(8) as requesting_attorney_code,\n        trim(district)::varchar(17) as district,\n        req_date::timestamp_ntz(9) as request_date,\n        trim(maiden_nam)::varchar(80) as maiden_name,\n        trim(acct_mgr)::varchar(50) as account_manager,\n        trial_date::timestamp_ntz(9) as trial_date,\n        dth_date::timestamp_ntz(9) as death_date,\n        trim(complaint)::varchar(15) as complaint,\n        trim(firmcode)::varchar(10) as firm_code,\n        trim(plan)::varchar(2) as plan_code,\n        trim(req_para)::varchar(30) as requesting_paralegal,\n        trim(plaintiff)::varchar(50) as plaintiff_name,\n        trim(lot_no)::varchar(21) as lot_no,\n        trim(source)::varchar(2) as source_code,\n        trim(attorney)::varchar(25) as attorney_last_name,\n        trim(attyfirst)::varchar(1) as attorney_first_initial,\n        trim(court)::varchar(14) as court,\n        trim(court2)::varchar(14) as court2,\n        trim(occupation)::varchar(20) as occupation,\n        trim(\"CASE\")::varchar(35) as case_no,\n        trim(add1)::varchar(50) as address1,\n        trim(name_first)::varchar(15) as first_name,\n        trim(county)::varchar(14) as county,\n        trim(add2)::varchar(50) as address2,\n        testcase::boolean as is_testcase,\n        template::boolean as is_template,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawmasters\n    union\n    select\n        -1 as master_key,\n        'UNKNOWN' as id_tblmaster,\n        'UNKNOWN' as division,\n        'UNKNOWN' as plaintiff_caption,\n        '' as bb_no,\n        '' as asb_case_no,\n        'UNKNOWN' as client_code,\n        'UNKNOWN' as category,\n        'UNKNOWN' as rt_rep,\n        'UNKNOWN' as claim_no,\n        'UNKNOWN' as plaintiff_attorney_code,\n        '' as middle_name_initial,\n        '' as comment,\n        'UNKNOWN' as maiden_name2,\n        'UNKNOWN' as defendant_caption,\n        -1 as lrs_no,\n        '' as lrs_no_code,\n        'UNKNOWN' as bill_code,\n        'UNKNOWN' as last_name,\n        0::number(19, 4) as witness_fee_amount,\n        'UNKNOWN' as docket_number,\n        1::boolean as is_active,\n        '' as business_unit_code,\n        'UNKNOWN' as defendant_name,\n        -1::number as magna_case_no,\n        'UNKNOWN' as area,\n        'UNK' as litigation_code,\n        'UNKNOWN' as requesting_attorney_code,\n        'UNKNOWN' as district,\n        '1900-01-01'::timestamp_ntz(9) as request_date,\n        'UNKNOWN' as maiden_name,\n        'UNKNOWN' as account_manager,\n        '1900-01-01'::timestamp_ntz(9) as trial_date,\n        '1900-01-01'::timestamp_ntz(9) as death_date,\n        '' as complaint,\n        'UNKNOWN' as firm_code,\n        '' as plan_code,\n        'UNKNOWN' as requesting_paralegal,\n        'UNKNOWN' as plaintiff_name,\n        'UNKNOWN' as lot_no,\n        '' as source_code,\n        'UNKNOWN' as attorney_last_name,\n        '' as attorney_first_initial,\n        'UNKNOWN' as court,\n        'UNKNOWN' as court2,\n        'UNKNOWN' as occupation,\n        'UNKNOWN' as case_no,\n        'UNKNOWN' as address1,\n        'UNKNOWN' as first_name,\n        'UNKNOWN' as county,\n        'UNKNOWN' as address2,\n        NULL::boolean as is_testcase,\n        NULL::boolean as is_template,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_masters where master_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_masters"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.917839Z", "completed_at": "2024-02-21T22:07:27.975278Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.995281Z", "completed_at": "2024-02-21T22:07:27.995281Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11765623092651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_offices", "compiled": true, "compiled_code": "\n\nwith rawoffices as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbloffice\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_offices)\n    \n\n),\n\nfinal as (\n    select\n        abs(hash(id_tbloffice))::number as office_key,\n        trim(id_tbloffice) as id_tbloffice,\n        trim(code)::varchar(1) as office_code,\n        trim(areacode1)::varchar(3) as area_code_1,\n        trim(areacode2)::varchar(3) as area_code_2,\n        trim(areacode3)::varchar(3) as area_code_3,\n        trim(areacode4)::varchar(3) as area_code_4,\n        trim(state)::varchar(2) as state,\n        trim(desc)::varchar(20) as description,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawoffices\n    union\n    select\n        -1 as office_key,\n        'UNKNOWN' as id_tbloffice,\n        '' as office_code,\n        'UNK' as area_code_1,\n        'UNK' as area_code_2,\n        'UNK' as area_code_3,\n        'UNK' as area_code_4,\n        '' as state,\n        '' as description,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_offices where office_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_offices"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.926839Z", "completed_at": "2024-02-21T22:07:27.978282Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:27.999420Z", "completed_at": "2024-02-21T22:07:27.999420Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.11682677268981934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_payments", "compiled": true, "compiled_code": "\n\nwith rawpayments as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_accounting_tblpayments\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_payments)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as payment_key,\n        fldinvoicenum::number as invoice_number,\n        active::boolean as is_active,\n        fldpaymentid::number(19, 0) as payment_id,\n        fldcheckid::number(19, 0) as check_id,\n        trim(fldpaymenttype)::varchar(16) as payment_type,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawpayments\n    union\n    select\n        -1 as payment_key,\n        -1 as invoice_number,\n        1 as is_active,\n        -1 as payment_id,\n        -1 as check_id,\n        '' as payment_type,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_payments where payment_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_payments"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.935969Z", "completed_at": "2024-02-21T22:07:27.980279Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.000279Z", "completed_at": "2024-02-21T22:07:28.000279Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.11765551567077637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_qc_jobs_queues", "compiled": true, "compiled_code": "\n\nwith rawqcjobsqueues as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblqcjobsqueue\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues)\n    \n\n),\n\nfinal as (\n    select\n        qc_sequence::number as qc_jobs_queue_key,\n        trim(qc_cl_code)::varchar(10) as qc_client_code,\n        trim(qc_status)::varchar(4) as qc_status,\n        qc_active::boolean as is_qc_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawqcjobsqueues\n    union\n    select\n        -1 as qc_jobs_queue_key,\n        'UNKNOWN' as qc_client_code,\n        '' as qc_status,\n        1 as is_qc_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues where qc_jobs_queue_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.943750Z", "completed_at": "2024-02-21T22:07:27.982278Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.001279Z", "completed_at": "2024-02-21T22:07:28.001279Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.11586165428161621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_requests", "compiled": true, "compiled_code": "\n\nwith rawrequests as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblrequest\n\n    \n        where greatest(coalesce(created, '1900-01-01'), coalesce(edited, '1900-01-01'))::timestamp_ntz(9) > (select coalesce(max(source_last_updated_at), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_requests)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as request_key,\n        trim(id_tblrequests)::varchar(256) as id_tblrequests,\n        trim(cl_code)::varchar(10) as client_code,\n        trim(descript)::varchar(50) as description,\n        tag::number as tag,\n        trim(status)::varchar(1) as request_status,\n        draft::number as draft_number,\n        hold::boolean as is_hold,\n        am_resp::boolean as is_am_resp,\n        reissue::boolean as is_reissue,\n        fin_date::timestamp_ntz(9) as received_date,\n        send_date::timestamp_ntz(9) as send_date,\n        req_date::timestamp_ntz(9) as request_date,\n        expdate::timestamp_ntz(9) as expiry_date,\n        dt_am_resp::timestamp_ntz(9) as am_resp_date,\n        released::timestamp_ntz as released_date,\n        active::boolean as is_active,\n        greatest(coalesce(created, '1900-01-01'), coalesce(edited, '1900-01-01'))::timestamp_ntz(9) as source_last_updated_at,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawrequests\n    union\n    select\n        -1 as request_key,\n        'UNKNOWN' as id_tblrequests,\n        'UNKNOWN' as client_code,\n        '' as description,\n        -1 as tag,\n        '' as request_status,\n        -1 as draft_number,\n        NULL as is_hold,\n        NULL as is_am_resp,\n        NULL as is_reissue,\n        '1900-01-01' as received_date,\n        '1900-01-01' as send_date,\n        '1900-01-01' as request_date,\n        '1900-01-01' as expiry_date,\n        '1900-01-01' as am_resp_date,\n        '1900-01-01' as released_date,\n        1 as is_active,\n        '1900-01-01' as source_last_updated_at,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_requests where request_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_requests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.948930Z", "completed_at": "2024-02-21T22:07:27.983278Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.002278Z", "completed_at": "2024-02-21T22:07:28.002278Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11798286437988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_stc_queues", "compiled": true, "compiled_code": "\n\nwith rawstcqueues as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblstcqueue\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_stc_queues)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as stc_queue_key,\n        trim(id_tblstcqueue)::varchar(256) as id_tblstcqueue,\n        trim(cl_code)::varchar(10) as client_code,\n        trim(at_code)::varchar(8) as attorney_code,\n        tag::number as tag,\n        sent::timestamp_ntz(9) as sent_date,\n        trim(sentby)::varchar(50) as sent_by,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawstcqueues\n    union\n    select\n        -1 as stc_queue_key,\n        'UNKNOWN' as id_tblstcqueue,\n        'UNKNOWN' as client_code,\n        'UNKNOWN' as attorney_code,\n        -1 as tag,\n        '1900-01-01' as sent_date,\n        'UNKNOWN'::varchar(50) as sent_by,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_stc_queues where stc_queue_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_stc_queues"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.959309Z", "completed_at": "2024-02-21T22:07:27.984576Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.003423Z", "completed_at": "2024-02-21T22:07:28.003423Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11765718460083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_tag_items", "compiled": true, "compiled_code": "\n\nwith rawtagitems as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbltagitem\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_tag_items)\n    \n\n),\n\nfinal as (\n    select\n        nid::number as tag_item_key,\n        trim(id_tbltagitem)::varchar(256) as id_tbltagitem,\n        lrs_no::number as lrs_number,\n        tag::number as tag,\n        scan_date::timestamp_ntz(9) as scan_date,\n        deleted::timestamp_ntz(9) as deleted_date,\n        dtmanual::timestamp_ntz(9) as manual_date,\n        dtrssdone::timestamp_ntz(9) as rss_done_date,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawtagitems\n    union\n    select\n        -1 as tag_item_key,\n        'UNKNOWN' as id_tbltagitem,\n        -1 as lrs_number,\n        -1 as tag,\n        '1900-01-01' as scan_date,\n        '1900-01-01' as deleted_date,\n        '1900-01-01' as manual_date,\n        '1900-01-01' as rss_done_date,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_tag_items where tag_item_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_tag_items"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:27.966309Z", "completed_at": "2024-02-21T22:07:27.986597Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.006277Z", "completed_at": "2024-02-21T22:07:28.006277Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.11865735054016113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.dim_timesheets", "compiled": true, "compiled_code": "\n\nwith rawtimesheets as (\n    select * from HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbltimesheet\n\n    \n        where metadata_created_at > (select coalesce(max(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.dim_timesheets)\n    \n\n),\n\nfinal as (\n    select\n        sequenceid::number as timesheet_key,\n        trim(id_tbltimesheet)::varchar(256) as id_tbltimesheet,\n        trim(cl_code)::varchar(10) as client_code,\n        tag::number as tag,\n        trim(type)::varchar(1) as timesheet_type,\n        txn_code::number as transaction_code,\n        txn_date::timestamp_ntz(9) as transaction_date,\n        trim(descript)::varchar(50) as description,\n        deleted::timestamp_ntz(9) as deleted_date,\n        active::boolean as is_active,\n        metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from rawtimesheets\n    union\n    select\n        -1 as timesheet_key,\n        'UNKNOWN' as id_tbltimesheet,\n        'UNKNOWN' as client_code,\n        -1 as tag,\n        '' as timesheet_type,\n        -1 as transaction_code,\n        '1900-01-01' as transaction_date,\n        '' as description,\n        '1900-01-01' as deleted_date,\n        1 as is_active,\n        '1900-01-01' as harmonized_created_ts,\n        current_timestamp as created_ts,\n        current_timestamp as updated_ts\n\n    \n        where not exists (select 1 from HARMONIZED_DEV.RECORDTRAK.dim_timesheets where timesheet_key = -1)\n    \n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.dim_timesheets"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.048895Z", "completed_at": "2024-02-21T22:07:28.052982Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.099277Z", "completed_at": "2024-02-21T22:07:28.099277Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0831000804901123, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.recordtrak.dim_goals", "compiled": true, "compiled_code": "\n\n\n\nwith goals as (\nselect * from RAW_DEV.ISSUEGOAL.monthlygoals\n),\n\nfinal as (\n    select *\n    from goals\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.recordtrak.dim_goals"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.040785Z", "completed_at": "2024-02-21T22:07:28.054983Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.107278Z", "completed_at": "2024-02-21T22:07:28.107278Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09465265274047852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.dbt_constraints.dbt_constraints-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.055982Z", "completed_at": "2024-02-21T22:07:28.059988Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.108933Z", "completed_at": "2024-02-21T22:07:28.108933Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.08714699745178223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.recordtrak.snapshot_dim_budgets", "compiled": true, "compiled_code": "\n\n\n\nwith budgets as (\nselect * from RAW_DEV.ISSUEGOAL.dailybudgets\n),\n\nfinal as (\n    select * from budgets\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.recordtrak.snapshot_dim_budgets"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.060987Z", "completed_at": "2024-02-21T22:07:28.101280Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.119932Z", "completed_at": "2024-02-21T22:07:28.119932Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.09721183776855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_raw_data_dailybudgets_date.8a53dcbe3c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date as unique_field,\n    count(*) as n_records\n\nfrom RAW_DEV.ISSUEGOAL.dailybudgets\nwhere date is not null\ngroup by date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.071172Z", "completed_at": "2024-02-21T22:07:28.103276Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.121935Z", "completed_at": "2024-02-21T22:07:28.121935Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09470272064208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_raw_data_monthlygoals_goal_month.ed2269a89b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    goal_month as unique_field,\n    count(*) as n_records\n\nfrom RAW_DEV.ISSUEGOAL.monthlygoals\nwhere goal_month is not null\ngroup by goal_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.076994Z", "completed_at": "2024-02-21T22:07:28.104278Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.122936Z", "completed_at": "2024-02-21T22:07:28.122936Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09450936317443848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_accounting_tblinvoices_sequenceid.00d07453f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_accounting_tblinvoices\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.082174Z", "completed_at": "2024-02-21T22:07:28.105676Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.123988Z", "completed_at": "2024-02-21T22:07:28.123988Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.09521341323852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_accounting_tblpayments_sequenceid.260ceac882", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_accounting_tblpayments\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.089173Z", "completed_at": "2024-02-21T22:07:28.117429Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.134995Z", "completed_at": "2024-02-21T22:07:28.134995Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.10311222076416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblclient_id_tblclient.dc2071cced", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_tblclient as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblclient\nwhere id_tblclient is not null\ngroup by id_tblclient\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.144996Z", "completed_at": "2024-02-21T22:07:28.170573Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.215376Z", "completed_at": "2024-02-21T22:07:28.215376Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1073007583618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tbldefendant_id_tbldefendant.6c49ba8102", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_tbldefendant as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbldefendant\nwhere id_tbldefendant is not null\ngroup by id_tbldefendant\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.156571Z", "completed_at": "2024-02-21T22:07:28.176288Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.228885Z", "completed_at": "2024-02-21T22:07:28.228885Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10504961013793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblfirm_id_tblfirm.f8f6da3c35", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_tblfirm as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblfirm\nwhere id_tblfirm is not null\ngroup by id_tblfirm\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.162616Z", "completed_at": "2024-02-21T22:07:28.189572Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.232899Z", "completed_at": "2024-02-21T22:07:28.232899Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10989022254943848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblholdreq_sequenceid.4e3ead5b63", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblholdreq\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.177572Z", "completed_at": "2024-02-21T22:07:28.212375Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.243196Z", "completed_at": "2024-02-21T22:07:28.243196Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10331487655639648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tbllitcase_sequenceid.0e0efcc252", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbllitcase\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.183575Z", "completed_at": "2024-02-21T22:07:28.216375Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.247885Z", "completed_at": "2024-02-21T22:07:28.247885Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1067357063293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblmaster_id_tblmaster.0fa5ba92cf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_tblmaster as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblmaster\nwhere id_tblmaster is not null\ngroup by id_tblmaster\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.192628Z", "completed_at": "2024-02-21T22:07:28.227881Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.249884Z", "completed_at": "2024-02-21T22:07:28.249884Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10831189155578613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tbloffice_id_tbloffice.d6c9b0a120", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_tbloffice as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbloffice\nwhere id_tbloffice is not null\ngroup by id_tbloffice\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.202574Z", "completed_at": "2024-02-21T22:07:28.229884Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.252884Z", "completed_at": "2024-02-21T22:07:28.252884Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11131072044372559, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblqcjobsqueue_qc_sequence.357fc777e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    qc_sequence as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblqcjobsqueue\nwhere qc_sequence is not null\ngroup by qc_sequence\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.218376Z", "completed_at": "2024-02-21T22:07:28.240884Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.263885Z", "completed_at": "2024-02-21T22:07:28.263885Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.10131025314331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblrequest_sequenceid.0d6a1bc3bf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblrequest\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.278882Z", "completed_at": "2024-02-21T22:07:28.308883Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.347032Z", "completed_at": "2024-02-21T22:07:28.347032Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10504627227783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tblstcqueue_sequenceid.5b14bdb7ed", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tblstcqueue\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.288034Z", "completed_at": "2024-02-21T22:07:28.312883Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.355933Z", "completed_at": "2024-02-21T22:07:28.355933Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10204577445983887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tbltagitem_nid.6996640826", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    nid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbltagitem\nwhere nid is not null\ngroup by nid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.297882Z", "completed_at": "2024-02-21T22:07:28.332951Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.358929Z", "completed_at": "2024-02-21T22:07:28.359352Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10201048851013184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.source_unique_recordtrak_recordtrak_tbltimesheet_sequenceid.d70fcea39e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sequenceid as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_PROD.PROD_MAGNA_AGG.recordtrak_tbltimesheet\nwhere sequenceid is not null\ngroup by sequenceid\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.313883Z", "completed_at": "2024-02-21T22:07:28.343445Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.365971Z", "completed_at": "2024-02-21T22:07:28.365971Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10101056098937988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_business_units_business_unit_key.1e0870e9e4", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        business_unit_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_business_units\n    group by business_unit_key\n    having count(*) > 1\n        or business_unit_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.320882Z", "completed_at": "2024-02-21T22:07:28.344952Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.371894Z", "completed_at": "2024-02-21T22:07:28.371894Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09801316261291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_business_units_business_unit_key.7bdeb8856d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    business_unit_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_business_units\nwhere business_unit_key is not null\ngroup by business_unit_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.327567Z", "completed_at": "2024-02-21T22:07:28.347032Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.374947Z", "completed_at": "2024-02-21T22:07:28.374947Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10000729560852051, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_clients_client_key.85ba7be504", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        client_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_clients\n    group by client_key\n    having count(*) > 1\n        or client_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.336026Z", "completed_at": "2024-02-21T22:07:28.357929Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.380430Z", "completed_at": "2024-02-21T22:07:28.380430Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.09800839424133301, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_clients_client_key.a856337432", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    client_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_clients\nwhere client_key is not null\ngroup by client_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.348842Z", "completed_at": "2024-02-21T22:07:28.367931Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.391892Z", "completed_at": "2024-02-21T22:07:28.391892Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.0920097827911377, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_hold_requests_hold_request_key.864cc79869", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        hold_request_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_hold_requests\n    group by hold_request_key\n    having count(*) > 1\n        or hold_request_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.405891Z", "completed_at": "2024-02-21T22:07:28.434458Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.476568Z", "completed_at": "2024-02-21T22:07:28.476568Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11067557334899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_hold_requests_hold_request_key.1a96257ea3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    hold_request_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_hold_requests\nwhere hold_request_key is not null\ngroup by hold_request_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.414928Z", "completed_at": "2024-02-21T22:07:28.444456Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.487567Z", "completed_at": "2024-02-21T22:07:28.487618Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11097073554992676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_firms_firm_key.8268286281", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        firm_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_firms\n    group by firm_key\n    having count(*) > 1\n        or firm_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.423930Z", "completed_at": "2024-02-21T22:07:28.461027Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.489568Z", "completed_at": "2024-02-21T22:07:28.489568Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.1087491512298584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_firms_firm_key.ac725069f3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    firm_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_firms\nwhere firm_key is not null\ngroup by firm_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.435457Z", "completed_at": "2024-02-21T22:07:28.465029Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.500660Z", "completed_at": "2024-02-21T22:07:28.500660Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10996270179748535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_dates_date_key.717b874c38", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        date_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_dates\n    group by date_key\n    having count(*) > 1\n        or date_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.446579Z", "completed_at": "2024-02-21T22:07:28.475568Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.505575Z", "completed_at": "2024-02-21T22:07:28.505575Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.11018538475036621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_dates_date_key.61e1d0726d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_dates\nwhere date_key is not null\ngroup by date_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.454370Z", "completed_at": "2024-02-21T22:07:28.478566Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.507593Z", "completed_at": "2024-02-21T22:07:28.507593Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10389423370361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_defendants_defendant_key.4c24f5aa4e", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        defendant_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_defendants\n    group by defendant_key\n    having count(*) > 1\n        or defendant_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.467031Z", "completed_at": "2024-02-21T22:07:28.491570Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.512921Z", "completed_at": "2024-02-21T22:07:28.512921Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.09988951683044434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_defendants_defendant_key.31a2304a21", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    defendant_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_defendants\nwhere defendant_key is not null\ngroup by defendant_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.480032Z", "completed_at": "2024-02-21T22:07:28.501567Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.520822Z", "completed_at": "2024-02-21T22:07:28.520822Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.08666872978210449, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_litigation_cases_litigation_case_key.a5bfce6d6b", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        litigation_case_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases\n    group by litigation_case_key\n    having count(*) > 1\n        or litigation_case_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.534579Z", "completed_at": "2024-02-21T22:07:28.560017Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.603911Z", "completed_at": "2024-02-21T22:07:28.603911Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11440443992614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_litigation_cases_litigation_case_key.605f0a72e2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    litigation_case_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases\nwhere litigation_case_key is not null\ngroup by litigation_case_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.540858Z", "completed_at": "2024-02-21T22:07:28.574909Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.622220Z", "completed_at": "2024-02-21T22:07:28.622220Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11626434326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_invoices_invoice_key.19705b4d96", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        invoice_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_invoices\n    group by invoice_key\n    having count(*) > 1\n        or invoice_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.549859Z", "completed_at": "2024-02-21T22:07:28.583909Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.626222Z", "completed_at": "2024-02-21T22:07:28.626222Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.11736726760864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_invoices_invoice_key.b6406477d5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    invoice_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_invoices\nwhere invoice_key is not null\ngroup by invoice_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.561863Z", "completed_at": "2024-02-21T22:07:28.599911Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.637189Z", "completed_at": "2024-02-21T22:07:28.637189Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.1193692684173584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_masters_master_key.7be8a249f4", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        master_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_masters\n    group by master_key\n    having count(*) > 1\n        or master_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.577913Z", "completed_at": "2024-02-21T22:07:28.602912Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.641190Z", "completed_at": "2024-02-21T22:07:28.641190Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.11838269233703613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_masters_master_key.27a78d86f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    master_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_masters\nwhere master_key is not null\ngroup by master_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.584910Z", "completed_at": "2024-02-21T22:07:28.621221Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.643525Z", "completed_at": "2024-02-21T22:07:28.643525Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11352396011352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_offices_office_key.27773ff184", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        office_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_offices\n    group by office_key\n    having count(*) > 1\n        or office_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.594968Z", "completed_at": "2024-02-21T22:07:28.627224Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.649189Z", "completed_at": "2024-02-21T22:07:28.649189Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.10560035705566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_offices_office_key.33f0e00096", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    office_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_offices\nwhere office_key is not null\ngroup by office_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.605916Z", "completed_at": "2024-02-21T22:07:28.636190Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.656188Z", "completed_at": "2024-02-21T22:07:28.656188Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.09225082397460938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.fact_invoices_payments", "compiled": true, "compiled_code": "\n\nwith invoices as (\n    select\n        ABS(HASH(i.sequenceid, -1))::number as invoice_payment_key,\n        i.sequenceid::number as invoice_key,\n        ddi.date_key::number as invoice_date_key,\n        COALESCE(m.master_ident, -1)::number as master_key,\n        dof.office_key::number as office_key,\n        COALESCE(dbu.business_unit_key, -1)::number as business_unit_key,\n        COALESCE(ddf.defendant_key, -1)::number as defendant_key,\n        COALESCE(dcl.client_key, -1)::number as client_key,\n        COALESCE(dfi.firm_key, -1)::number as firm_key,\n        -1::number as payment_key,\n        19000101::number as payment_date_key,\n        COALESCE(i.fldinvoiceamount, 0)::number(38, 4) as invoice_amount,\n        COALESCE(i.fldsalestax, 0)::number(38, 4) as sales_tax_amount,\n        COALESCE(i.fldwitnessfee, 0)::number(38, 4) as witness_fee_amount,\n        0::number(38, 4) as payment_amount,\n        i.metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        CURRENT_TIMESTAMP::timestamp_ntz(9) as created_ts,\n        CURRENT_TIMESTAMP::timestamp_ntz(9) as updated_ts\n    -- Query joins\n    from harmonized_prod.prod_magna_agg.recordtrak_accounting_tblinvoices as i\n    inner join harmonized_prod.prod_magna_agg.recordtrak_tblmaster as m on UPPER(TRIM(i.primaryclcode)) = UPPER(TRIM(m.cl_code))\n    inner join harmonized_prod.prod_magna_agg.recordtrak_tbloffice as o on m.id_tbloffice = o.id_tbloffice\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblbill as l on UPPER(TRIM(m.cl_code)) = UPPER(TRIM(l.cl_code)) and UPPER(TRIM(m.rq_at_code)) = UPPER(TRIM(l.at_code)) and l.active = 1\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tbldefendant as d on UPPER(TRIM(i.fldatcode)) = UPPER(TRIM(d.at_code))\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblclient as c on d.id_tblclient = c.id_tblclient\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblfirm as f on c.id_tblfirm = f.id_tblfirm\n    -- Joins to get key columns\n    inner join HARMONIZED_DEV.RECORDTRAK.dim_invoices as din on i.sequenceid = din.invoice_key\n    inner join HARMONIZED_DEV.RECORDTRAK.dim_dates as ddi on TO_DATE(i.fldinvoicedate) = ddi.full_date\n    left join HARMONIZED_DEV.RECORDTRAK.dim_offices as dof on o.id_tbloffice = dof.id_tbloffice\n    left join HARMONIZED_DEV.RECORDTRAK.dim_business_units as dbu on UPPER(TRIM(l.businessunit)) = dbu.business_unit\n    left join HARMONIZED_DEV.RECORDTRAK.dim_defendants as ddf on d.id_tbldefendant = ddf.id_tbldefendant\n    left join HARMONIZED_DEV.RECORDTRAK.dim_clients as dcl on c.id_tblclient = dcl.id_tblclient\n    left join HARMONIZED_DEV.RECORDTRAK.dim_firms as dfi on f.id_tblfirm = dfi.id_tblfirm\n\n    \n        where\n            i.metadata_created_at > (select COALESCE(MAX(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments where payment_key = -1)\n    \n\n),\n\npayments as (\n    select\n        ABS(HASH(i.sequenceid, p.sequenceid))::number as invoice_payment_key,\n        i.sequenceid::number as invoice_key,\n        ddi.date_key::number as invoice_date_key,\n        COALESCE(m.master_ident, -1)::number as master_key,\n        dof.office_key::number as office_key,\n        COALESCE(dbu.business_unit_key, -1)::number as businessunit_key,\n        COALESCE(ddf.defendant_key, -1)::number as defendant_key,\n        COALESCE(dcl.client_key, -1)::number as client_key,\n        COALESCE(dfi.firm_key, -1)::number as firm_key,\n        p.sequenceid::number as payment_key,\n        ddp.date_key::number as payment_date_key,\n        0::number(38, 4) as invoice_amount,\n        0::number(38, 4) as sales_tax_amount,\n        0::number(38, 4) as witness_fee_amount,\n        COALESCE(p.fldpaymentamt, 0)::number(38, 4) as payment_amount,\n        p.metadata_created_at::timestamp_ntz(9) as harmonized_created_ts,\n        CURRENT_TIMESTAMP::timestamp_ntz(9) as created_ts,\n        CURRENT_TIMESTAMP::timestamp_ntz(9) as updated_ts\n\n    -- Query joins\n    from harmonized_prod.prod_magna_agg.recordtrak_accounting_tblpayments as p\n    inner join harmonized_prod.prod_magna_agg.recordtrak_accounting_tblinvoices as i on p.fldinvoicenum = i.fldinvoicenumber\n    inner join harmonized_prod.prod_magna_agg.recordtrak_tblmaster as m on UPPER(TRIM(i.primaryclcode)) = UPPER(TRIM(m.cl_code))\n    inner join harmonized_prod.prod_magna_agg.recordtrak_tbloffice as o on m.id_tbloffice = o.id_tbloffice\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblbill as l on UPPER(TRIM(m.cl_code)) = UPPER(TRIM(l.cl_code)) and UPPER(TRIM(m.rq_at_code)) = UPPER(TRIM(l.at_code)) and l.active = 1\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tbldefendant as d on UPPER(TRIM(i.fldatcode)) = UPPER(TRIM(d.at_code))\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblclient as c on d.id_tblclient = c.id_tblclient\n    left outer join harmonized_prod.prod_magna_agg.recordtrak_tblfirm as f on c.id_tblfirm = f.id_tblfirm\n    -- Joins to get key columns\n    inner join HARMONIZED_DEV.RECORDTRAK.dim_payments as pd on p.sequenceid = pd.payment_key\n    inner join HARMONIZED_DEV.RECORDTRAK.dim_dates as ddp on TO_DATE(p.fldpaymentdate) = ddp.full_date\n    inner join HARMONIZED_DEV.RECORDTRAK.dim_dates as ddi on TO_DATE(i.fldinvoicedate) = ddi.full_date\n    left join HARMONIZED_DEV.RECORDTRAK.dim_offices as dof on o.id_tbloffice = dof.id_tbloffice\n    left join HARMONIZED_DEV.RECORDTRAK.dim_business_units as dbu on UPPER(TRIM(l.businessunit)) = dbu.business_unit\n    left join HARMONIZED_DEV.RECORDTRAK.dim_defendants as ddf on d.id_tbldefendant = ddf.id_tbldefendant\n    left join HARMONIZED_DEV.RECORDTRAK.dim_clients as dcl on c.id_tblclient = dcl.id_tblclient\n    left join HARMONIZED_DEV.RECORDTRAK.dim_firms as dfi on f.id_tblfirm = dfi.id_tblfirm\n\n    \n        where\n            i.metadata_created_at > (select COALESCE(MAX(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments where payment_key = -1)\n            or\n            p.metadata_created_at > (select COALESCE(MAX(harmonized_created_ts), '1900-01-01') from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments where payment_key != -1)\n    \n),\n\nfinal as (\n    select * from invoices\n    union\n    select * from payments\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.673339Z", "completed_at": "2024-02-21T22:07:28.699936Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.738983Z", "completed_at": "2024-02-21T22:07:28.738983Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1032557487487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_payments_payment_key.df6982c052", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        payment_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_payments\n    group by payment_key\n    having count(*) > 1\n        or payment_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.682674Z", "completed_at": "2024-02-21T22:07:28.708932Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.748370Z", "completed_at": "2024-02-21T22:07:28.748370Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10286140441894531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_payments_payment_key.97ee26d5a5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    payment_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_payments\nwhere payment_key is not null\ngroup by payment_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.691053Z", "completed_at": "2024-02-21T22:07:28.717069Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.751985Z", "completed_at": "2024-02-21T22:07:28.751985Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10264730453491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_qc_jobs_queues_qc_jobs_queue_key.e4581770f7", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        qc_jobs_queue_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues\n    group by qc_jobs_queue_key\n    having count(*) > 1\n        or qc_jobs_queue_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.704134Z", "completed_at": "2024-02-21T22:07:28.735985Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.760983Z", "completed_at": "2024-02-21T22:07:28.760983Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10064840316772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_qc_jobs_queues_qc_jobs_queue_key.f50ad524cf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    qc_jobs_queue_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues\nwhere qc_jobs_queue_key is not null\ngroup by qc_jobs_queue_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.711983Z", "completed_at": "2024-02-21T22:07:28.747078Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.764988Z", "completed_at": "2024-02-21T22:07:28.764988Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1026465892791748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_requests_request_key.75f9f0e52d", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        request_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_requests\n    group by request_key\n    having count(*) > 1\n        or request_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.718985Z", "completed_at": "2024-02-21T22:07:28.749983Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.767986Z", "completed_at": "2024-02-21T22:07:28.767986Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09665155410766602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_requests_request_key.be885ee3b4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    request_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_requests\nwhere request_key is not null\ngroup by request_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.729018Z", "completed_at": "2024-02-21T22:07:28.752984Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.770985Z", "completed_at": "2024-02-21T22:07:28.770985Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.08605313301086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_stc_queues_stc_queue_key.c4f62c9a07", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        stc_queue_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_stc_queues\n    group by stc_queue_key\n    having count(*) > 1\n        or stc_queue_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.739987Z", "completed_at": "2024-02-21T22:07:28.758987Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.775983Z", "completed_at": "2024-02-21T22:07:28.775983Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.08581256866455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_stc_queues_stc_queue_key.6002a1ec1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    stc_queue_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_stc_queues\nwhere stc_queue_key is not null\ngroup by stc_queue_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.827484Z", "completed_at": "2024-02-21T22:07:28.867585Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.891843Z", "completed_at": "2024-02-21T22:07:28.891843Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10485529899597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_timesheets_timesheet_key.e5c151506e", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        timesheet_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_timesheets\n    group by timesheet_key\n    having count(*) > 1\n        or timesheet_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.801996Z", "completed_at": "2024-02-21T22:07:28.826483Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.884888Z", "completed_at": "2024-02-21T22:07:28.884888Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12485623359680176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_tag_items_tag_item_key.133d0cc4f4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    tag_item_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_tag_items\nwhere tag_item_key is not null\ngroup by tag_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.793061Z", "completed_at": "2024-02-21T22:07:28.822029Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.869830Z", "completed_at": "2024-02-21T22:07:28.869830Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1368556022644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_dim_tag_items_tag_item_key.0ff9b0b569", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        tag_item_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.dim_tag_items\n    group by tag_item_key\n    having count(*) > 1\n        or tag_item_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.811026Z", "completed_at": "2024-02-21T22:07:28.845525Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.905844Z", "completed_at": "2024-02-21T22:07:28.906842Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.1410055160522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recordtrak.data_refresh_timestamp", "compiled": true, "compiled_code": "\n\nwith refresh_times as (\n    select\n        '1900-01-01'::timestamp_ntz(9) as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_dates\n    union all\n    select\n        '1900-01-01'::timestamp_ntz(9) as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_business_units\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_clients\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_defendants\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_firms\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_hold_requests\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_invoices\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_litigation_cases\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_masters\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_offices\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_payments\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_qc_jobs_queues\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_requests\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_stc_queues\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_tag_items\n    union all\n    select\n        harmonized_created_ts as harmonized_refreshed,\n        updated_ts as model_refreshed\n    from HARMONIZED_DEV.RECORDTRAK.dim_timesheets\n),\n\nfinal as (\n    select\n        'HARMONIZED LAYER TABLES' as description,\n        max(harmonized_refreshed) as last_refresh,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from refresh_times\n    union all\n    select\n        'DATA MODEL TABLES' as description,\n        max(model_refreshed) as last_refresh,\n        current_timestamp::timestamp_ntz(9) as created_ts,\n        current_timestamp::timestamp_ntz(9) as updated_ts\n    from refresh_times\n)\n\nselect * from final", "relation_name": "HARMONIZED_DEV.RECORDTRAK.data_refresh_timestamp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.839031Z", "completed_at": "2024-02-21T22:07:28.870842Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.912270Z", "completed_at": "2024-02-21T22:07:28.912270Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.12601017951965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.unique_dim_timesheets_timesheet_key.2b7df327cb", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    timesheet_key as unique_field,\n    count(*) as n_records\n\nfrom HARMONIZED_DEV.RECORDTRAK.dim_timesheets\nwhere timesheet_key is not null\ngroup by timesheet_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.847526Z", "completed_at": "2024-02-21T22:07:28.887298Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.915202Z", "completed_at": "2024-02-21T22:07:28.915202Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.12231278419494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_business_unit_key__business_unit_key__ref_dim_business_units_.94a032b0d3", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    business_unit_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and business_unit_key is not null\n        \n),\n\nparent as (\n    select\n        business_unit_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_business_units\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.business_unit_key = child.business_unit_key\n\n    where parent.business_unit_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.858067Z", "completed_at": "2024-02-21T22:07:28.889842Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.917994Z", "completed_at": "2024-02-21T22:07:28.917994Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11461687088012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_client_key__client_key__ref_dim_clients_.dc9e52976c", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    client_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and client_key is not null\n        \n),\n\nparent as (\n    select\n        client_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_clients\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.client_key = child.client_key\n\n    where parent.client_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.871852Z", "completed_at": "2024-02-21T22:07:28.904030Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:28.932073Z", "completed_at": "2024-02-21T22:07:28.932931Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.11892175674438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_defendant_key__defendant_key__ref_dim_defendants_.255eb58bc5", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    defendant_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and defendant_key is not null\n        \n),\n\nparent as (\n    select\n        defendant_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_defendants\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.defendant_key = child.defendant_key\n\n    where parent.defendant_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.948038Z", "completed_at": "2024-02-21T22:07:28.988666Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.042052Z", "completed_at": "2024-02-21T22:07:29.042052Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.13407111167907715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_firm_key__firm_key__ref_dim_firms_.16dbc6de87", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    firm_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and firm_key is not null\n        \n),\n\nparent as (\n    select\n        firm_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_firms\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.firm_key = child.firm_key\n\n    where parent.firm_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.961039Z", "completed_at": "2024-02-21T22:07:28.993569Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.055181Z", "completed_at": "2024-02-21T22:07:29.055181Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13532185554504395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_invoice_date_key__date_key__ref_dim_dates_.05afca25a6", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    invoice_date_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and invoice_date_key is not null\n        \n),\n\nparent as (\n    select\n        date_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_dates\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.date_key = child.invoice_date_key\n\n    where parent.date_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.978046Z", "completed_at": "2024-02-21T22:07:29.018976Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.060050Z", "completed_at": "2024-02-21T22:07:29.060050Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13071393966674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_invoice_key__invoice_key__ref_dim_invoices_.60a7763219", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    invoice_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and invoice_key is not null\n        \n),\n\nparent as (\n    select\n        invoice_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_invoices\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.invoice_key = child.invoice_key\n\n    where parent.invoice_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:29.009407Z", "completed_at": "2024-02-21T22:07:29.045051Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.070695Z", "completed_at": "2024-02-21T22:07:29.070695Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.11748433113098145, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_office_key__office_key__ref_dim_offices_.6764d560eb", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    office_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and office_key is not null\n        \n),\n\nparent as (\n    select\n        office_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_offices\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.office_key = child.office_key\n\n    where parent.office_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:28.995567Z", "completed_at": "2024-02-21T22:07:29.046051Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.071704Z", "completed_at": "2024-02-21T22:07:29.071704Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.13466286659240723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_master_key__master_key__ref_dim_masters_.f82a9412ec", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    master_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and master_key is not null\n        \n),\n\nparent as (\n    select\n        master_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_masters\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.master_key = child.master_key\n\n    where parent.master_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:29.019972Z", "completed_at": "2024-02-21T22:07:29.056051Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.072704Z", "completed_at": "2024-02-21T22:07:29.072704Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10965657234191895, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_payment_date_key__date_key__ref_dim_dates_.a23591c3b8", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    payment_date_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and payment_date_key is not null\n        \n),\n\nparent as (\n    select\n        date_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_dates\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.date_key = child.payment_date_key\n\n    where parent.date_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:29.031052Z", "completed_at": "2024-02-21T22:07:29.060050Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.076706Z", "completed_at": "2024-02-21T22:07:29.076706Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11054134368896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_foreign_key_fact_invoices_payments_payment_key__payment_key__ref_dim_payments_.bf609e196f", "compiled": true, "compiled_code": "\nwith child as (\n  select\n    payment_key\n  from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n  where 1=1\n        and payment_key is not null\n        \n),\n\nparent as (\n    select\n        payment_key\n    from HARMONIZED_DEV.RECORDTRAK.dim_payments\n),\n\nvalidation_errors as (\n    select\n        child.*\n    from child\n    left join parent\n        on parent.payment_key = child.payment_key\n\n    where parent.payment_key is null\n)\n\nselect *\nfrom validation_errors", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-21T22:07:29.048168Z", "completed_at": "2024-02-21T22:07:29.066049Z"}, {"name": "execute", "started_at": "2024-02-21T22:07:29.083340Z", "completed_at": "2024-02-21T22:07:29.083340Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.09732508659362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recordtrak.dbt_constraints_primary_key_fact_invoices_payments_invoice_payment_key.76a976fee8", "compiled": true, "compiled_code": "with validation_errors as (\n    select\n        invoice_payment_key, count(*) as row_count\n    from HARMONIZED_DEV.RECORDTRAK.fact_invoices_payments\n    group by invoice_payment_key\n    having count(*) > 1\n        or invoice_payment_key is null\n        \n)\n\nselect *\nfrom validation_errors", "relation_name": null}], "elapsed_time": 3.0064382553100586, "args": {"static": false, "populate_cache": true, "empty_catalog": false, "enable_legacy_logger": false, "static_parser": true, "select": [], "macro_debugging": false, "which": "generate", "favor_state": false, "log_level": "info", "log_format_file": "debug", "introspect": true, "partial_parse_file_diff": true, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "show_resource_report": false, "printer_width": 80, "print": true, "write_json": true, "indirect_selection": "eager", "log_file_max_bytes": 10485760, "log_format": "default", "invocation_command": "dbt docs generate", "log_path": "C:\\Users\\ashukla\\OneDrive - Launch Consulting Group\\Documents\\Clients\\MagnaLS\\dbt-RT\\recordtrak-dbt\\logs", "partial_parse": true, "use_colors": true, "compile": true, "cache_selected_only": false, "defer": false, "strict_mode": false, "log_level_file": "debug", "vars": {}, "profiles_dir": "C:\\Users\\ashukla\\OneDrive - Launch Consulting Group\\Documents\\Clients\\MagnaLS\\dbt-RT\\recordtrak-dbt", "exclude": [], "quiet": false, "use_colors_file": true, "send_anonymous_usage_stats": true, "project_dir": "C:\\Users\\ashukla\\OneDrive - Launch Consulting Group\\Documents\\Clients\\MagnaLS\\dbt-RT\\recordtrak-dbt"}}